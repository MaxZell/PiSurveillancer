<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="utf-8">
        <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <title>PiSurveillancer Client</title>
        <style>
            body{
                width: 100%;
                height: 100%;
                background-color: cornflowerblue;
                text-align: center;
                overflow: hidden;
                position: absolute;
                display:flex;
                flex-direction: column;
            }
            #camera-cont{
                padding: 10vh;
                vertical-align: top; 
            }
            #camera{
                width: 640px;
                height: 480px;
                border: 1vh solid black;
            }
            button{
                border: none;
                color: white;
                font-size: 3vh;
                margin: 2vh;
                padding: 1vh;
            }
            button:hover{
                filter: brightness(0.85);
                cursor: pointer;
            }
            #start-btn{
                background-color: green;
            }
            #stop-btn{
                background-color: red;
            }
            @media only screen and (max-width: 600px) {
                #camera{
                    width: 100%;
                    height: auto;
                }
            }
        </style>
    </head>
    <body>
        <div id="camera-cont">
            <img src="https://svgsilh.com/svg/1296797.svg" id="camera">
            <br>
            <button type="button" id="start-btn" onclick="commander('start')">Start</button>
            <button type="button" id="stop-btn" onclick="commander('stop')">Stop</button>
        </div>
        <script src="/socket.io/socket.io.js"></script>
        <script>
            const socket = io()
            let isActive = false
            // server connection handling
            socket.on("connect_error", (err) => {
                console.clear()
                console.log(`server connection error: ${err.message}`);
            });

            function commander(command) {
                // send camera command
                if (command === "start") {
                    // check is camera was activated before
                    if (!isActive) {
                        console.log("start camera")
                        isActive = true
                        document.getElementById("camera").style.borderColor = "red"
                        socket.emit("start", "")
                    }
                } else if (command === "stop") {
                    if (isActive) {
                        console.log("stop camera")
                        isActive = false
                        document.getElementById("camera").style.borderColor = "black"
                        document.getElementById("camera").src = "https://svgsilh.com/svg/1296797.svg"
                        socket.emit("stop", "")
                    }
                }
            }

            // update frames
            let data = ""
            socket.on('frame', (data) =>{
                document.getElementById("camera").src = data
            })
        </script>
    </body>
</html>